name: build
on: [push, pull_request]
jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: blas
        key: blas-v6
      id: cache-blas
    - if: ${{ startsWith(matrix.os, 'windows') && steps.cache-blas.outputs.cache-hit != 'true' }}
      name: Install BLAS and LAPACK on Windows
      run: |
        mkdir blas
        cd blas
        ls
        curl -L -o libblas.dll https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64/libblas.dll
        curl -L -o liblapack.dll https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64/liblapack.dll
    - run: |
        echo "$PWD\blas" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - if: ${{ startsWith(matrix.os, 'windows') }}
      name: Install cmfrec.dll on Windows
      run: |
        echo %PATH%
        git clone --recursive --branch master https://github.com/david-cortes/cmfrec.git
        cd cmfrec
        git checkout d7106c59b558bcbed68d2dc5f1a258af3f86cbf9
        mkdir build
        cd build
        echo %GITHUB_WORKSPACE%
        echo "%GITHUB_WORKSPACE%/blas"
        ls "%GITHUB_WORKSPACE%/blas"
        cmake .. -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=Release -DBLAS_LIBRARIES="%GITHUB_WORKSPACE%/blas/libblas.dll" -DLAPACK_LIBRARIES="%GITHUB_WORKSPACE%/blas/liblapack.dll"
        cmake --build . --config Release
        cp Release/cmfrec.dll ../../vendor
        ls ../../vendor
      shell: cmd
    # - name: dumpbin
    #   run: |
    #     set "DUMPBIN=%VS140COMNTOOLS%\..\..\VC\bin\dumpbin.exe"
    #     "%DUMPBIN%" /exports vendor/cmfrec.dll
    #   shell: cmd
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
        bundler-cache: true
    - if: ${{ !startsWith(matrix.os, 'windows') }}
      run: bundle exec rake vendor:all
    - run: bundle exec rake test
